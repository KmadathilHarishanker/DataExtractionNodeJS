<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>File Parser Dashboard</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f5f5f5;
            color: #333;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            border-radius: 10px;
            margin-bottom: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5em;
            margin-bottom: 10px;
        }

        .header p {
            font-size: 1.1em;
            opacity: 0.9;
        }

        .dashboard {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }

        .card {
            background: white;
            border-radius: 10px;
            padding: 25px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.2s;
        }

        .card:hover {
            transform: translateY(-2px);
        }

        .card h2 {
            color: #667eea;
            margin-bottom: 20px;
            font-size: 1.5em;
        }

        .upload-area {
            border: 2px dashed #667eea;
            border-radius: 10px;
            padding: 40px;
            text-align: center;
            background-color: #f8f9ff;
            transition: all 0.3s;
        }

        .upload-area:hover {
            border-color: #764ba2;
            background-color: #f0f2ff;
        }

        .upload-area.dragover {
            border-color: #764ba2;
            background-color: #e8ebff;
        }

        .file-input {
            display: none;
        }

        .upload-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 30px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 16px;
            transition: all 0.3s;
        }

        .upload-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.4);
        }

        .upload-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 15px;
            margin-top: 20px;
        }

        .stat-item {
            background: #f8f9ff;
            padding: 20px;
            border-radius: 8px;
            text-align: center;
        }

        .stat-number {
            font-size: 2em;
            font-weight: bold;
            color: #667eea;
        }

        .stat-label {
            color: #666;
            margin-top: 5px;
        }

        .uploads-list {
            max-height: 400px;
            overflow-y: auto;
        }

        .upload-item {
            background: #f8f9ff;
            padding: 15px;
            margin-bottom: 10px;
            border-radius: 8px;
            border-left: 4px solid #667eea;
        }

        .upload-item h4 {
            color: #333;
            margin-bottom: 5px;
        }

        .upload-meta {
            color: #666;
            font-size: 0.9em;
        }

        .status {
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            display: none;
        }

        .status.success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .status.error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }

        .spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #667eea;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 10px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .powerbi-section {
            grid-column: 1 / -1;
            background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            color: white;
        }

        .powerbi-section h2 {
            color: white;
        }

        .powerbi-info {
            background: rgba(255, 255, 255, 0.1);
            padding: 20px;
            border-radius: 8px;
            margin-top: 15px;
        }

        .api-endpoint {
            background: rgba(255, 255, 255, 0.2);
            padding: 10px;
            border-radius: 5px;
            font-family: monospace;
            margin: 10px 0;
        }

        @media (max-width: 768px) {
            .dashboard {
                grid-template-columns: 1fr;
            }
            
            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìä File Parser Dashboard</h1>
            <p>Upload CSV, JSON, or XML files to parse and store in database for Power BI integration</p>
        </div>

        <div class="dashboard">
            <div class="card">
                <h2>üìÅ Upload File</h2>
                <div class="upload-area" id="uploadArea">
                    <p>Drag and drop your file here or</p>
                    <br>
                    <button class="upload-btn" onclick="document.getElementById('fileInput').click()">
                        Choose File
                    </button>
                    <input type="file" id="fileInput" class="file-input" accept=".csv,.json,.xml">
                    <p style="margin-top: 15px; color: #666; font-size: 0.9em;">
                        Supported formats: CSV, JSON, XML (Max 10MB)
                    </p>
                </div>
                
                <div class="loading" id="loading">
                    <div class="spinner"></div>
                    <p>Processing file...</p>
                </div>
                
                <div class="status" id="status"></div>
            </div>

            <div class="card">
                <h2>üìà Statistics</h2>
                <div class="stats-grid" id="statsGrid">
                    <div class="stat-item">
                        <div class="stat-number" id="totalUploads">0</div>
                        <div class="stat-label">Total Uploads</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number" id="totalRecords">0</div>
                        <div class="stat-label">Total Records</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number" id="csvFiles">0</div>
                        <div class="stat-label">CSV Files</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number" id="jsonFiles">0</div>
                        <div class="stat-label">JSON Files</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-number" id="xmlFiles">0</div>
                        <div class="stat-label">XML Files</div>
                    </div>
                </div>
            </div>

            <div class="card">
                <h2>üìã Recent Uploads</h2>
                <div class="uploads-list" id="uploadsList">
                    <p style="color: #666; text-align: center;">No uploads yet</p>
                </div>
            </div>

            <div class="card powerbi-section">
                <h2>‚ö° Power BI Integration</h2>
                <div class="powerbi-info">
                    <p><strong>API Endpoint for Power BI:</strong></p>
                    <div class="api-endpoint" id="powerbiEndpoint">
                        http://localhost:3000/api/powerbi-data
                    </div>
                    <p style="margin-top: 15px;">
                        <strong>Steps to connect:</strong><br>
                        1. Open Power BI Desktop<br>
                        2. Get Data ‚Üí Web<br>
                        3. Enter the API endpoint above<br>
                        4. Configure refresh settings as needed
                    </p>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Global variables
        let uploadArea = document.getElementById('uploadArea');
        let fileInput = document.getElementById('fileInput');
        let loading = document.getElementById('loading');
        let status = document.getElementById('status');

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            loadStats();
            loadUploads();
            setupEventListeners();
        });

        function setupEventListeners() {
            // File input change
            fileInput.addEventListener('change', handleFileSelect);

            // Drag and drop
            uploadArea.addEventListener('dragover', handleDragOver);
            uploadArea.addEventListener('dragleave', handleDragLeave);
            uploadArea.addEventListener('drop', handleDrop);
        }

        function handleDragOver(e) {
            e.preventDefault();
            uploadArea.classList.add('dragover');
        }

        function handleDragLeave(e) {
            e.preventDefault();
            uploadArea.classList.remove('dragover');
        }

        function handleDrop(e) {
            e.preventDefault();
            uploadArea.classList.remove('dragover');
            
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                uploadFile(files[0]);
            }
        }

        function handleFileSelect(e) {
            const file = e.target.files[0];
            if (file) {
                uploadFile(file);
            }
        }

        async function uploadFile(file) {
            // Validate file type
            const allowedTypes = ['.csv', '.json', '.xml'];
            const fileExt = '.' + file.name.split('.').pop().toLowerCase();
            
            if (!allowedTypes.includes(fileExt)) {
                showStatus('error', 'Please select a CSV, JSON, or XML file.');
                return;
            }

            // Show loading
            loading.style.display = 'block';
            status.style.display = 'none';

            try {
                const formData = new FormData();
                formData.append('file', file);

                const response = await fetch('/upload', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (response.ok) {
                    showStatus('success', result.message);
                    loadStats();
                    loadUploads();
                    fileInput.value = ''; // Clear input
                } else {
                    showStatus('error', result.error || 'Upload failed');
                }
            } catch (error) {
                showStatus('error', 'Network error: ' + error.message);
            } finally {
                loading.style.display = 'none';
            }
        }

        function showStatus(type, message) {
            status.className = `status ${type}`;
            status.textContent = message;
            status.style.display = 'block';
            
            // Auto-hide after 5 seconds
            setTimeout(() => {
                status.style.display = 'none';
            }, 5000);
        }

        async function loadStats() {
            try {
                const response = await fetch('/api/stats');
                const stats = await response.json();

                document.getElementById('totalUploads').textContent = stats.total_uploads || 0;
                document.getElementById('totalRecords').textContent = stats.total_records || 0;
                document.getElementById('csvFiles').textContent = stats.csv_files || 0;
                document.getElementById('jsonFiles').textContent = stats.json_files || 0;
                document.getElementById('xmlFiles').textContent = stats.xml_files || 0;
            } catch (error) {
                console.error('Failed to load stats:', error);
            }
        }

        async function loadUploads() {
            try {
                const response = await fetch('/api/uploads');
                const data = await response.json();
                const uploads = data.uploads || [];

                const uploadsList = document.getElementById('uploadsList');
                
                if (uploads.length === 0) {
                    uploadsList.innerHTML = '<p style="color: #666; text-align: center;">No uploads yet</p>';
                    return;
                }

                uploadsList.innerHTML = uploads.map(upload => `
                    <div class="upload-item">
                        <h4>${upload.filename}</h4>
                        <div class="upload-meta">
                            Type: ${upload.file_type.toUpperCase()} | 
                            Records: ${upload.record_count} | 
                            Date: ${new Date(upload.upload_date).toLocaleString()}
                        </div>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Failed to load uploads:', error);
            }
        }

        // Update Power BI endpoint with current host
        document.getElementById('powerbiEndpoint').textContent = 
            `${window.location.protocol}//${window.location.host}/api/powerbi-data`;
    </script>
</body>
</html>
